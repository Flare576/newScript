#!/bin/sh
":" //;NODE_PATH=$(npm -g root) exec node -- "$0" "$@"
const t=require("module"),e=t.prototype.require;t.prototype.require=function(n){const{execSync:r,spawnSync:s}=e("child_process");var c="--fsl";try{return e.apply(this,arguments)}catch(t){console.log(t,`Installing ${n}`);const{argv:i,exit:a,cwd:p}=process;r(`npm -g install ${n}`,{encoding:"utf8"});var o=i.length;2<o&&i[o-1]===c&&a(42),i.shift();var l=i.shift();i.push(c);let e=null;for(;null===e||42===e;)e=s(l,i,{cwd:p(),detached:!0,stdio:"inherit"}),e=e.status;a()}};
// End Boilerplate - see https://github.com/Flare576/newScript

const version = '0.0.8'
const usage = `Generate a script stub for a variety of different languages, and the asociated brew recipe.`;
const argv = require('yargs')
  .strict()
  .command("* <name>")
  .usage(usage)
  .version(version)
  .alias('version', 'v')
  .alias('help', 'h')
  .option('extension', { alias: 'e', description: 'Include file extension', type: 'boolean' })
  .option('fsl', { hidden: true, type: 'boolean' }) // Allow seemless dependency loading
  .option( 'language', {
    alias: 'l',
    type: 'string',
    description: 'Language to use for script',
    choices: ['shell', 'sh', 'javascript', 'js', 'py', 'python'],
    demandOption: true,
  })
.argv;

const { writeFileSync, chmodSync, mkdirSync }= require('fs');

(async () => {
  let template
  if (argv.language.startsWith('j')) {
    template = require('./stubs/javascript')
  } else if (argv.language.startsWith('py')) {
    template = require('./stubs/python')
  } else if (argv.language.startsWith('sh')) {
    template = require('./stubs/shell')
  }

  const formula = template.formula(argv.name)
  const { files = [], folders = [] } = template.stubs(argv.name);
  folders.forEach(folder => {
    try{
      mkdirSync(folder, { recursive: true })
    } catch(_) {}
  })
  files.forEach(({ fileName, content, exec }) => {
    writeFileSync(fileName, content)
    exec && chmodSync(fileName, 0o755)
  })
  writeFileSync(`${argv.name}.rb`, formula)
})();

// vim: ft=javascript
